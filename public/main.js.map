{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/forget/forget.component.css","webpack:///./src/app/components/forget/forget.component.html","webpack:///./src/app/components/forget/forget.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/components/reset/reset.component.css","webpack:///./src/app/components/reset/reset.component.html","webpack:///./src/app/components/reset/reset.component.ts","webpack:///./src/app/components/user-energy-mix/user-energy-mix.component.css","webpack:///./src/app/components/user-energy-mix/user-energy-mix.component.html","webpack:///./src/app/components/user-energy-mix/user-energy-mix.component.ts","webpack:///./src/app/components/user-model/user-model.component.css","webpack:///./src/app/components/user-model/user-model.component.html","webpack:///./src/app/components/user-model/user-model.component.ts","webpack:///./src/app/components/user-panel-navbar/user-panel-navbar.component.css","webpack:///./src/app/components/user-panel-navbar/user-panel-navbar.component.html","webpack:///./src/app/components/user-panel-navbar/user-panel-navbar.component.ts","webpack:///./src/app/components/user-power-storage/user-power-storage.component.css","webpack:///./src/app/components/user-power-storage/user-power-storage.component.html","webpack:///./src/app/components/user-power-storage/user-power-storage.component.ts","webpack:///./src/app/components/user-trade/user-trade.component.css","webpack:///./src/app/components/user-trade/user-trade.component.html","webpack:///./src/app/components/user-trade/user-trade.component.ts","webpack:///./src/app/components/userpanel/userpanel.component.css","webpack:///./src/app/components/userpanel/userpanel.component.html","webpack:///./src/app/components/userpanel/userpanel.component.ts","webpack:///./src/app/components/verify/verify.component.css","webpack:///./src/app/components/verify/verify.component.html","webpack:///./src/app/components/verify/verify.component.ts","webpack:///./src/app/guards/admin.guard.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/app/services/validate.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!-- <app-navbar></app-navbar> -->\\n  <ng4-loading-spinner> </ng4-loading-spinner>\\n  <flash-messages></flash-messages>\\n  <router-outlet></router-outlet>\\n\\n\\n\\n\"","import { Component , HostListener } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n\n  @HostListener('window:beforeunload', ['$event'])\n  beforeunloadHandler(event) {\n    //  this.endSession();\n  }\n\n endSession(){\n   //this.authToken = null;\n  // this.user = null;\n   localStorage.clear();\n }\n  title = 'Frontend';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule , FormsModule } from '@angular/forms';\nimport {ValidateService} from './services/validate.service';\nimport {AuthService} from './services/auth.service';\nimport {DataService} from './services/data.service';\nimport { FlashMessagesModule } from 'angular2-flash-messages';\nimport { AuthGuard } from './guards/auth.guard';\nimport { AdminGuard } from './guards/admin.guard';\nimport { DataTablesModule } from 'angular-datatables';\n\nimport { Ng4LoadingSpinnerModule } from 'ng4-loading-spinner';\nimport { NgbModule, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { UserModelComponent } from './components/user-model/user-model.component';\nimport { VerifyComponent } from './components/verify/verify.component';\nimport { ForgetComponent } from './components/forget/forget.component';\nimport { ResetComponent } from './components/reset/reset.component';\nimport { UserpanelComponent } from './components/userpanel/userpanel.component';\nimport { UserPanelNavbarComponent } from './components/user-panel-navbar/user-panel-navbar.component';\nimport { UserEnergyMixComponent } from './components/user-energy-mix/user-energy-mix.component';\nimport { UserPowerStorageComponent } from './components/user-power-storage/user-power-storage.component';\nimport { UserTradeComponent } from './components/user-trade/user-trade.component';\nconst appRoutes: Routes =  [\n  {path:'', component: LoginComponent},\n  {path:'register', component: RegisterComponent},\n  {path:'login', component: LoginComponent},\n  {path:'forget', component: ForgetComponent},\n  {path:'verify/:token', component: VerifyComponent},\n  {path:'reset/:token', component: ResetComponent},\n  {path:'dashboard', component: DashboardComponent, canActivate:[AdminGuard]},\n  {path:'profile', component: ProfileComponent, canActivate:[AuthGuard]},\n  {path:'userPanel', component: UserpanelComponent, canActivate:[AuthGuard]}\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    HomeComponent,\n    DashboardComponent,\n    ProfileComponent,\n    RegisterComponent,\n    UserModelComponent,\n    VerifyComponent,\n    ForgetComponent,\n    ResetComponent,\n    UserpanelComponent,\n    UserPanelNavbarComponent,\n    UserEnergyMixComponent,\n    UserPowerStorageComponent,\n    UserTradeComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    HttpModule,\n    ReactiveFormsModule,\n    FormsModule,\n    DataTablesModule,\n    RouterModule.forRoot(appRoutes),\n    FlashMessagesModule.forRoot(),\n    NgbModule.forRoot(),\n    Ng4LoadingSpinnerModule.forRoot()\n  ],\n  providers: [ValidateService,AuthService,\n              DataService,\n              AuthGuard,NgbActiveModal, AdminGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\n<h2 class=\\\"page-header\\\">Dashboard</h2>\\n<p>Welcome to your Dashboard</p>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n\\n<div class=\\\"alert alert-success\\\" *ngIf=\\\"emailVerificationResposne\\\">\\n  <strong>Success!</strong> {{emailVerificationResposne}}\\n</div>\\n\\n\\n\\n<!-- Registration Form /-->\\n\\n\\n\\n\\n<div class=\\\"container d-flex h-100\\\">\\n    <div class=\\\"row align-self-center w-100\\\">\\n        <div class=\\\"col-10 mx-auto\\\">\\n          <div class=\\\" \\\">\\n\\n            <div class=\\\"col \\\">\\n        \\n            </div>\\n            <div class=\\\"col-6 offset-3 peer pX-20 pY-50 h-100 bgc-white scrollable pos-r text-center Aligner-item \\\">\\n              <a href=\\\"#\\\"><img class=\\\"logo\\\" src=\\\"../../../assets/img/logo.png\\\"></a>\\n        \\n        \\n              <h4 class=\\\"fw-400 c-grey-900 mB-20 login\\\">Forget Password</h4>\\n              <p class=\\\"sign-in-text\\\">Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard </p>\\n             \\n              <!-- Registration Form -->\\n<form [formGroup]=\\\"form\\\" (submit)=\\\"submitForget()\\\">\\n\\n\\n    <!-- Email Input -->\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"email\\\">Email</label>\\n      <div>\\n        <input type=\\\"text\\\" name=\\\"email\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Email\\\" formControlName=\\\"email\\\" (blur)=\\\"checkEmail()\\\" />\\n        <!-- Validation -->\\n        <ul class=\\\"help-block\\\">\\n          <li *ngIf=\\\"form.controls.email.errors?.required && form.controls.email.dirty\\\"  class=\\\"text-danger\\\">This field is required</li>\\n          <li *ngIf=\\\"form.controls.email.errors?.validateEmail && form.controls.email.dirty\\\" class=\\\"text-danger\\\">This must be a valid e-mail</li>\\n        </ul>\\n      </div>\\n    </div>\\n  \\n    <!-- Submit Input -->\\n    <input  [disabled]=\\\" !processing || !emailValid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Submit\\\" />\\n  \\n  </form>\\n        \\n              <div class=\\\"col\\\">\\n                <a class=\\\"forget-pass\\\" [routerLink]=\\\"['/login']\\\">Login </a>\\n              </div>\\n        \\n        \\n            </div>\\n        \\n        \\n          </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {AuthService} from '../../services/auth.service';\nimport * as alertify from 'alertify.js';\nimport {Router} from '@angular/router';\nimport {FlashMessagesService} from 'angular2-flash-messages';\nimport { Ng4LoadingSpinnerService } from 'ng4-loading-spinner';\ndeclare var $:any\n\n@Component({\n  selector: 'app-forget',\n  templateUrl: './forget.component.html',\n  styleUrls: ['./forget.component.css']\n})\nexport class ForgetComponent implements OnInit {\n\n  form;\n  processing:boolean = false;\n  emailVerificationResposne:any;\n  emailValid;\n\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n    private flashMessage:FlashMessagesService,\n    private spinnerService: Ng4LoadingSpinnerService\n  ) {\n    this.createForm();\n   }\n\n  ngOnInit() {\n\n  }\n\n\n\n\n   // Function to validate e-mail is proper format\n   validateEmail(controls) {\n    // Create a regular expression\n    const regExp = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n    // Test email against regular expression\n    if (regExp.test(controls.value)) {\n      return null; // Return as valid email\n    } else {\n      return { 'validateEmail': true } // Return as invalid email\n    }\n  }\n\n  submitForget(){\n\n   const email = this.form.get('email').value;\n     this.spinnerService.show();\n   this.authService.forgetPassword(email).subscribe(res=>{\n     \n     if(res['success'] === true){\n        this.spinnerService.hide();\n      alertify.logPosition('top right').success('An email has been send to your account ');//example\n     // this.form.get('email').setValue('');\n\n     this.emailVerificationResposne = res['message'];\n     this.router.navigate(['/login']);\n\n     }else{\n         this.spinnerService.hide();\n      alertify.logPosition('top right').error('Something went wrong please try again ');//example\n      this.form.get('email').setValue('');\n\n     }\n   });\n  }\n\n\n  // Function to check if e-mail is taken\n  checkEmail() {\n\n        let email = this.form.get('email').value;\n        \n        if(email == null || email == '' || email == undefined)\n        {\n          this.flashMessage.show('Please enter an email address', {\n            cssClass:'alert-danger text-center',\n            timeout: 3000\n          });\n          alertify.logPosition('top right').error(\"Please enter an email address \");//example\n          return false;\n        }\n          this.spinnerService.show();\n    // Function from authentication file to check if e-mail is taken\n    this.authService.checkEmail(this.form.get('email').value).subscribe(data => {\n      // Check if success true or false was returned from API\n       console.log(data['success']);\n\n      if (data['success'] === false) {\n        this.processing = true;\n        alertify.logPosition('top right').success(\"Email is verified\");//example\n          this.emailValid = true;\n        this.spinnerService.hide();\n      } else {\n        this.emailValid = false;\n        alertify.logPosition('top right').error(\"Email does not exits \");//example\n        this.form.get('email').setValue('');\n        this.spinnerService.hide();\n      }\n    });\n  \n  }\n\n\n    // Function to create registration form\n    createForm() {\n      this.form = this.formBuilder.group({\n        // Email Input\n        email: ['', Validators.compose([\n          Validators.required, // Field is required\n          this.validateEmail // Custom validation\n        ])],\n\n        }); // Add custom validator to form for matching passwords\n    }\n\n\n\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"jumbotron text-center\\\">\\n    <h1>MEAN Authentication App</h1>\\n    <p class=\\\"lead\\\">Welcome to our custom MEAN authentication application built from scratch</p>\\n    <div>\\n      <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/register']\\\">Register</a> <a class=\\\"btn btn-default\\\" [routerLink]=\\\"['/login']\\\">Login</a>\\n    </div>\\n  </div>\\n  \\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-4\\\">\\n      <h3>Express Backend</h3>\\n      <p>A rock solid Node.js/Express server using Mongoose to organize models and query the database</p>\\n    </div>\\n    <div class=\\\"col-md-4\\\">\\n      <h3>Angular-CLI</h3>\\n      <p>Angular-CLI to generate components, services and more. Local dev server and easy compilation</p>\\n    </div>\\n    <div class=\\\"col-md-4\\\">\\n      <h3>JWT Tokens</h3>\\n      <p>Full featured authentication using JSON web tokens. Login and store user data</p>\\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container d-flex h-100\\\">\\n    <div class=\\\"row align-self-center w-100\\\">\\n        <div class=\\\"col-10 mx-auto\\\">\\n          <div class=\\\" \\\">\\n\\n            <div class=\\\"col \\\">\\n        \\n            </div>\\n            <div class=\\\"col-6 offset-3 peer pX-20 pY-50 h-100 bgc-white scrollable pos-r text-center Aligner-item \\\">\\n              <a href=\\\"#\\\"><img class=\\\"logo\\\" src=\\\"../../../assets/img/logo.png\\\"></a>\\n        \\n        \\n              <h4 class=\\\"fw-400 c-grey-900 mB-20 login\\\">Login</h4>\\n              <p class=\\\"sign-in-text\\\">Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard </p>\\n              <form class=\\\"pT-50\\\" (submit)=\\\"onLoginSubmit()\\\">\\n                <div class=\\\"form-group\\\">\\n                  <input type=\\\"email\\\" class=\\\"form-control sign-in-input\\\"\\n                  [(ngModel)]=\\\"email\\\" name=\\\"email\\\"\\n                  placeholder=\\\"email address\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <input type=\\\"password\\\" class=\\\"form-control sign-in-input\\\"\\n                  [(ngModel)]=\\\"password\\\" name=\\\"password\\\"\\n                  placeholder=\\\"Password\\\">\\n                </div>\\n          \\n                <div class=\\\"form-group pY-20\\\">\\n                   <button type=\\\"submit\\\" class=\\\"btn btn-sign-in\\\">Sign In</button>\\n        \\n                </div>\\n              </form>\\n\\n        \\n              <div class=\\\"col\\\">\\n                  <a class=\\\"btn btn-sign-in\\\" [routerLink]=\\\"['/register']\\\"> Sign up </a> /\\n                <a class=\\\"forget-pass\\\" [routerLink]=\\\"['/forget']\\\"> Forget Password ? </a>\\n              </div>\\n        \\n        \\n            </div>\\n        \\n        \\n          </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\nimport {Router} from '@angular/router';\nimport {FlashMessagesService} from 'angular2-flash-messages';\nimport { Ng4LoadingSpinnerService } from 'ng4-loading-spinner';\nimport * as alertify from 'alertify.js';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  email: String;\n  password: String;\n\n  constructor(\n    private authService:AuthService,\n    private router:Router,\n    private flashMessage:FlashMessagesService,\n    private spinnerService: Ng4LoadingSpinnerService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onLoginSubmit(){\n    const user = {\n      email: this.email,\n      password: this.password\n    }\n\nthis.spinnerService.show();\n    this.authService.authenticateUser(user).subscribe(data => {\n\n      if(data['success'] === 'notActivate'){\n        alertify.logPosition('top right').error('Admin did not approved your account yet');\n        this.spinnerService.hide();\n        this.password = '';\n        this.router.navigate(['login']);\n      }\n\n      if(data['success'] === true){\n        alertify.logPosition('top right').success('Sucessfully login');\n        this.authService.storeUserData(data['token'], data['user']);\n        this.spinnerService.hide();\n        console.log('User resposne is ', data);\n        if(data['user']['isAdmin'] === true){\n          this.router.navigate(['profile']);\n        }else{\n          this.router.navigate(['userPanel']);\n        }\n        \n      } else if(data['success'] === false) {\n        alertify.logPosition('top right').error('Invalid username or password');\n        this.spinnerService.hide();\n        this.password = '';\n        this.router.navigate(['login']);\n      }\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Navbar</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      \\n      <!-- <li class=\\\"nav-item\\\" *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/dashboard']\\\">Dashboard </a>\\n      </li> -->\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/profile']\\\">Profile </a>\\n      </li>\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"!authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/forget']\\\">Forget </a>\\n      </li>\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"!authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/login']\\\">Login </a>\\n      </li>\\n      <li class=\\\"nav-item\\\"  *ngIf=\\\"!authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/register']\\\">Register</a>\\n      </li>\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"authService.loggedIn()\\\"><a class=\\\"nav-link\\\" (click)=\\\"onLogoutClick()\\\" href=\\\"#\\\">Logout</a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\"","import { Component, OnInit,ViewChild } from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\nimport {Router} from '@angular/router';\nimport {FlashMessagesService} from 'angular2-flash-messages';\nimport {RegisterComponent} from '../register/register.component';\n\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  @ViewChild(RegisterComponent ) register: RegisterComponent;\n\n  constructor(   private authService:AuthService,\n                 private router:Router,\n                 private flashMessage:FlashMessagesService) { }\n\n  ngOnInit() {\n  }\n\n  onLogoutClick(){\n    this.authService.logout();\n    this.flashMessage.show('You are logged out', {\n      cssClass:'alert-success',\n      timeout: 3000\n    });\n    this.router.navigate(['/login']);\n    return false;\n  }\n\n  openModal(){\n    this.register.openModal();\n}\n\n}\n","module.exports = \"\"","module.exports = \"<app-navbar ></app-navbar>\\n<div *ngIf=\\\"user\\\">\\n    <h2 class=\\\"page-header\\\">{{user.name}}</h2>\\n    <ul class=\\\"list-group\\\">\\n      <li class=\\\"list-group-item\\\">Username : {{user.username}}</li>\\n      <li class=\\\"list-group-item\\\">Email : {{user.email}}</li>\\n    </ul>\\n  </div>\\n  <!-- Buttons -->\\n  <br/>\\n  <table class=\\\"table table-striped table-bordered table-sm row-border hover\\\" datatable [dtOptions]=\\\"dtOptions\\\"\\n    [dtTrigger]=\\\"dtTrigger\\\">\\n    <thead>\\n      <tr>\\n        <th>Name</th>\\n        <th>Email</th>\\n        <th>Action</th>\\n\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let user of users$\\\">\\n        <td>{{ user.username }}</td>\\n        <td>{{ user.email }}</td>\\n        <td> <span  class=\\\"glyphicon glyphicon-pencil\\\" (click)=\\\"openModal(user._id)\\\">Edit</span></td>\\n      </tr>\\n    </tbody>\\n  </table>\\n\\n  <app-user-model ></app-user-model>\\n\"","import { Component, OnInit ,OnDestroy,ViewChild } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { Observable } from \"rxjs/Observable\";\nimport { Ng4LoadingSpinnerService } from 'ng4-loading-spinner';\nimport {UserModelComponent} from '../user-model/user-model.component';\ndeclare var $:any;\n\n@Component({\n\n\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit , OnDestroy{\n\n  @ViewChild(UserModelComponent) userModel:UserModelComponent;\n\n  user:object;\n  users$: object[] = [];\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  title:any = '';\n  userId:any = '';\n  timerValue:boolean = false;\n  registerModalShown = false;\n\n\n  constructor(\n              private authService:AuthService,\n              private router:Router,\n              private spinnerService: Ng4LoadingSpinnerService\n            ) {\n\n            }\n\n  ngOnInit() {\n\n    this.spinnerService.show();\n    this.authService.getProfile().subscribe(profile => {\n\n      this.user = profile['user'];\n      this.spinnerService.hide();\n    },\n     err => {\n       this.spinnerService.hide();\n       return false;\n     });\n\n\n     this.dtOptions = {\n           pagingType: 'full_numbers',\n           pageLength: 5,\n           processing: true\n         };\n\n         this.authService.getAllUsers().subscribe(data => {\n\n           this.users$ = data['users'];\n           this.dtTrigger.next();\n         });\n\n\n\n\n  }\n\n  ngOnDestroy(): void {\n    this.dtTrigger.unsubscribe();\n  }\n\n\n  openModal(id:any){\n    this.userModel.openModal(id);\n   \n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container d-flex h-100\\\">\\n    <div class=\\\"row align-self-center w-100\\\">\\n        <div class=\\\"col-10 mx-auto\\\">\\n          <div class=\\\" \\\">\\n\\n            <div class=\\\"col \\\">\\n        \\n            </div>\\n            <div class=\\\"col-6 offset-3 peer pX-20 pY-50 h-100 bgc-white scrollable pos-r text-center Aligner-item \\\">\\n              <a href=\\\"#\\\"><img class=\\\"logo\\\" src=\\\"../../../assets/img/logo.png\\\"></a>\\n              <h4 class=\\\"fw-400 c-grey-900 mB-20 login\\\">Signup</h4>\\n             \\n             <!-- Registration Form -->\\n<form [formGroup]=\\\"form\\\" (submit)=\\\"onRegisterSubmit(id)\\\">\\n\\n    <!-- Username Input -->\\n    <div class=\\\"form-group\\\">\\n      <!-- <label for=\\\"username\\\">Username</label> -->\\n      <div>\\n        <input type=\\\"text\\\" name=\\\"username\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Username\\\" formControlName=\\\"username\\\"  />\\n        <!-- Validation -->\\n        <ul class=\\\"help-block\\\">\\n          <li *ngIf=\\\"form.controls.username.errors?.required && form.controls.username.dirty\\\" class=\\\"text-danger\\\">This field is required</li>\\n        </ul>\\n      </div>\\n    </div>\\n  \\n    <!-- Email Input -->\\n    <div class=\\\"form-group\\\">\\n      <!-- <label for=\\\"email\\\">Email</label> -->\\n      <div [ngClass]=\\\"{'has-error': (form.controls.email.errors && form.controls.email.dirty) || (!emailValid && form.controls.email.dirty), 'has-success': !form.controls.email.errors && emailValid}\\\">\\n        <input type=\\\"text\\\" name=\\\"email\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Email\\\" formControlName=\\\"email\\\" (blur)=\\\"checkEmail()\\\" />\\n        <!-- Validation -->\\n        <ul class=\\\"help-block\\\">\\n          <li *ngIf=\\\"form.controls.email.errors?.required && form.controls.email.dirty\\\">This field is required</li>\\n          <li *ngIf=\\\"(form.controls.email.errors?.minlength && form.controls.email.dirty || form.controls.email.errors?.maxlength && form.controls.email.dirty ) && form.controls.email.dirty\\\">Minimum characters: 5, Maximum characters: 30</li>\\n          <li *ngIf=\\\"form.controls.email.errors?.validateEmail && form.controls.email.dirty\\\">This must be a valid e-mail</li>\\n          <li *ngIf=\\\"emailMessage\\\">{{ emailMessage}}</li>\\n        </ul>\\n      </div>\\n    </div>\\n  \\n    <div class=\\\"form-group\\\">\\n      <!-- <label for=\\\"distanceFromGrid\\\">Distance from grid</label> -->\\n      <div [ngClass]=\\\"{'has-error': (form.controls.distanceFromGrid.errors && form.controls.distanceFromGrid.dirty), 'has-success': !form.controls.distanceFromGrid.errors}\\\">\\n        <input type=\\\"text\\\" name=\\\"distanceFromGrid\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"Distance from grid\\\" formControlName=\\\"distanceFromGrid\\\"  />\\n        <!-- Validation -->\\n        <ul class=\\\"help-block\\\">\\n          <li *ngIf=\\\"form.controls.distanceFromGrid.errors?.required && form.controls.distanceFromGrid.dirty\\\">This field is required</li>\\n        </ul>\\n      </div>\\n    </div>\\n  \\n    <div class=\\\"form-group\\\">\\n      <!-- <label for=\\\"balanceAmount\\\">Balance</label> -->\\n      <div [ngClass]=\\\"{'has-error': (form.controls.balanceAmount.errors && form.controls.balanceAmount.dirty), 'has-success': !form.controls.balanceAmount.errors}\\\">\\n        <input type=\\\"text\\\" name=\\\"balanceAmount\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"Balance Amount\\\" formControlName=\\\"balanceAmount\\\"  />\\n        <!-- Validation -->\\n        <ul class=\\\"help-block\\\">\\n          <li *ngIf=\\\"form.controls.balanceAmount.errors?.required && form.controls.balanceAmount.dirty\\\">This field is required</li>\\n        </ul>\\n      </div>\\n    </div>\\n  \\n    <div class=\\\"form-group\\\">\\n      <!-- <label for=\\\"PricePerKWH\\\">Price Per KWH</label> -->\\n      <div [ngClass]=\\\"{'has-error': (form.controls.PricePerKWH.errors && form.controls.PricePerKWH.dirty), 'has-success': !form.controls.PricePerKWH.errors}\\\">\\n        <input type=\\\"text\\\" name=\\\"PricePerKWH\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"Price Per KHW\\\" formControlName=\\\"PricePerKWH\\\"  />\\n        <!-- Validation -->\\n        <ul class=\\\"help-block\\\">\\n          <li *ngIf=\\\"form.controls.PricePerKWH.errors?.required && form.controls.PricePerKWH.dirty\\\">This field is required</li>\\n        </ul>\\n      </div>\\n    </div>\\n  \\n    <div class=\\\"form-group\\\">\\n      <!-- <label for=\\\"LocationDetail\\\">Location</label> -->\\n      <div>\\n      \\n      <select formControlName=\\\"LocationDetail\\\" class=\\\"form-control\\\">\\n      \\n       <option  value=\\\"0\\\">Hotttingen</option>\\n       <option  value=\\\"1\\\">Hirslanden</option>\\n       <option  value=\\\"2\\\">Witikon</option>\\n       <option  value=\\\"3\\\">Werd</option>\\n       <option  value=\\\"4\\\">Sihlfeld</option>\\n       <option  value=\\\"5\\\">Albisrieden</option>\\n       <option  value=\\\"6\\\">Fluntern</option>\\n     </select>\\n   </div>\\n    </div>\\n  \\n  \\n  \\n  \\n    <!-- Password Input -->\\n    <div class=\\\"form-group\\\" >\\n      <!-- <label for=\\\"password\\\">Password</label> -->\\n      <div>\\n        <input type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Password\\\" formControlName=\\\"password\\\" />\\n        <!-- Validation -->\\n        <ul class=\\\"help-block\\\">\\n          <li *ngIf=\\\"form.controls.password.errors?.required && form.controls.password.dirty\\\" class=\\\"text-danger\\\">This field is required</li>\\n          <li class=\\\"text-danger\\\" *ngIf=\\\"form.controls.password.errors?.minlength && form.controls.password.dirty || form.controls.password.errors?.maxlength && form.controls.password.dirty \\\">Minimum characters: 8, Maximum characters: 35</li>\\n     <li  class=\\\"text-danger\\\" *ngIf=\\\"form.controls.password.errors?.validatePassword && form.controls.password.dirty\\\">Password must be at least 8 characters but no more than 50</li>\\n        </ul>\\n      </div>\\n    </div>\\n  \\n    <!-- Confirm Password Input -->\\n    <div class=\\\"form-group\\\">\\n      <!-- <label for=\\\"confirm\\\">Confirm Password</label> -->\\n      <div [ngClass]=\\\"{'has-error': (form.controls.confirm.errors && form.controls.confirm.dirty) || (form.errors?.matchingPasswords && form.controls.confirm.dirty), 'has-success': !form.controls.confirm.errors && !form.errors?.matchingPasswords}\\\">\\n        <input type=\\\"password\\\" name=\\\"confirm\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Confirm Password\\\" formControlName=\\\"confirm\\\" />\\n        <!-- Validation -->\\n        <ul class=\\\"help-block\\\">\\n          <li *ngIf=\\\"form.controls.confirm.errors?.required && form.controls.confirm.dirty\\\">This field is required</li>\\n          <li *ngIf=\\\"form.errors?.matchingPasswords && form.controls.confirm.dirty\\\">Password do not match</li>\\n        </ul>\\n      </div>\\n    </div>\\n  \\n    \\n  \\n    <!-- Submit Input -->\\n    <input  [disabled]=\\\"!form.valid || processing || !emailValid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Submit\\\" />\\n  \\n  </form>\\n  <!-- Registration Form /-->\\n  \\n  <br/>\\n  <div class=\\\"btn btn-primary\\\">\\n      <a class=\\\"forget-pass\\\" [routerLink]=\\\"['/login']\\\">Login </a>\\n    </div>\\n        \\n            </div>\\n        \\n            \\n        \\n          </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\"","import { Component, OnInit,Input } from '@angular/core';\nimport {ValidateService} from '../../services/validate.service';\nimport {AuthService} from '../../services/auth.service';\nimport {Router} from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Ng4LoadingSpinnerService } from 'ng4-loading-spinner';\nimport * as alertify from 'alertify.js';\ndeclare var $:any;\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n   @Input() title = ``;\n   @Input() userId = '';\n  form;\n  message;\n  messageClass;\n  processing:boolean = false;\n  emailValid;\n  emailMessage ;\n  usernameValid;\n  usernameMessage;\n  user:Object;\n  editUser:boolean;\n  locations  = ['Hotttingen','Hirslanden','Witikon','Werd','Sihlfeld','Albisrieden', 'Fluntern'];\n  lattitudes = [47.372300 ,47.365321 , 47.361235, 47.372614, 47.372318, 47.375455, 47.382181];\n  longitudes = [8.565892 ,8.572578  , 8.595230,  8.527667, 8.507186, 8.482983 ,  8.566247];\n \n\n  lattitude:any;\n  longitude:any;\n  location:any;\n\n    constructor(\n      private formBuilder: FormBuilder,\n      private authService: AuthService,\n      private router: Router,\n      private spinnerService: Ng4LoadingSpinnerService\n    ) {\n      this.createForm(); // Create Angular 2 Form when component loads\n    }\n\n    // Function to create registration form\n    createForm() {\n      this.form = this.formBuilder.group({\n        // Email Input\n        email: ['', Validators.compose([\n          Validators.required, // Field is required\n          Validators.minLength(5), // Minimum length is 5 characters\n          Validators.maxLength(30), // Maximum length is 30 characters\n          this.validateEmail // Custom validation\n        ])],\n        // Username Input\n        username: ['', Validators.compose([\n          Validators.required\n        ])],\n\n        // distanceFromGrid Input\n        distanceFromGrid: ['', Validators.compose([\n              Validators.required\n        ])],\n\n        // balanceAmount Input\n        balanceAmount: ['', Validators.compose([\n              Validators.required\n        ])],\n        // Location Input\n        LocationDetail: ['', Validators.compose([\n              Validators.required\n        ])],\n        // Location Input\n        PricePerKWH: ['', Validators.compose([\n              Validators.required\n        ])],\n\n\n        // Password Input\n        password: ['', Validators.compose([\n          Validators.required, // Field is required\n          Validators.minLength(8), // Minimum length is 8 characters\n        Validators.maxLength(50), // Maximum length is 35 characters\n        ])],\n        // Confirm Password Input\n        confirm: ['', Validators.required] // Field is required\n      }, { validator: this.matchingPasswords('password', 'confirm') }); // Add custom validator to form for matching passwords\n    }\n\n    // Function to disable the registration form\n    disableForm() {\n      this.form.controls['email'].disable();\n      this.form.controls['username'].disable();\n      this.form.controls['password'].disable();\n      this.form.controls['confirm'].disable();\n    }\n\n    // Function to enable the registration form\n    enableForm() {\n      this.form.controls['email'].enable();\n      this.form.controls['username'].enable();\n      this.form.controls['password'].enable();\n      this.form.controls['confirm'].enable();\n    }\n\n    // Function to validate e-mail is proper format\n    validateEmail(controls) {\n      // Create a regular expression\n      const regExp = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n      // Test email against regular expression\n      if (regExp.test(controls.value)) {\n        return null; // Return as valid email\n      } else {\n        return { 'validateEmail': true } // Return as invalid email\n      }\n    }\n\n\n\nclearForm(){\n  this.form.controls['username'].setValue('');\n  this.form.controls['email'].setValue('');\n  this.form.controls['password'].setValue('');\n  this.form.controls['confirm'].setValue('');\n\n}\n\n    // Funciton to ensure passwords match\n    matchingPasswords(password, confirm) {\n      return (group: FormGroup) => {\n        // Check if both fields are the same\n        if (group.controls[password].value === group.controls[confirm].value) {\n          return null; // Return as a match\n        } else {\n          return { 'matchingPasswords': true } // Return as error: do not match\n        }\n      }\n    }\n\n\n    // Function to submit form\n    onRegisterSubmit() {\n\n     this.spinnerService.show();\n     let locationVlaue = this.form.get('LocationDetail').value;\n     this.location =  this.locations[locationVlaue];\n     this.lattitude  = this.lattitudes[locationVlaue];\n     this.longitude = this.longitudes[locationVlaue];\n\n    this.processing = true; // Used to notify HTML that form is in processing, so that it can be disabled\n    //this.disableForm(); // Disable the form\n    // Create user object form user's inputs\n    const user = {\n      email: this.form.get('email').value, // E-mail input field\n      username: this.form.get('username').value, // Username input field\n      password: this.form.get('password').value,\n      distanceFromGrid: this.form.get('distanceFromGrid').value,\n      balanceAmount: this.form.get('balanceAmount').value,\n      PricePerKWH: this.form.get('PricePerKWH').value,\n      LocationDetail: this.location,\n      Lattitude:this.lattitude,\n      Longitude:this.longitude\n    }\n\n    // Function from authentication service to register user\n    this.authService.registerUser(user).subscribe(data => {\n\n      // Resposne from registration attempt\n      if (data['success'] == false) {\n\n        this.processing = false; // Re-enable submit button\n        this.enableForm(); // Re-enable form\n        alertify.logPosition('top right').error(\"Something went wrong please try again\");//example\n        this.spinnerService.hide();\n        this.router.navigate(['/register']);\n\n      } else {\n        alertify.logPosition('top right').success(\"User Registered Sucessfully\");//example\n        this.spinnerService.hide();\n        this.router.navigate(['/login']);\n\n      }\n    });\n\n\n\n\n\n\n\n\n\n  }\n\n    // Function to check if e-mail is taken\n    checkEmail() {\n        \n      // Function from authentication file to check if e-mail is taken\n      this.authService.checkEmail(this.form.get('email').value).subscribe(data => {\n        // Check if success true or false was returned from API\n\n        if (!data['success']) {\n          this.emailValid = false; // Return email as invalid\n          this.emailMessage = data['message']; // Return error message\n           \n\n        } else {\n          this.emailValid = true; // Return email as valid\n          this.emailMessage = data['message']; // Return success message\n           \n        }\n      });\n    }\n\n\n\n    ngOnInit() {\n      this.emailValid = true;\n      this.emailMessage = '';\n\n    }\n\n    clearMessages(){\n      this.emailMessage = '';\n      this.emailValid = true;\n    }\n\n    openModal(){\n      this.clearMessages();\n      this.clearForm();\n      $('#myModal').modal('show');\n    }\n\n    registerRoute(){\n      this.router.navigate(['register']);\n    }\n\n\n  }\n","module.exports = \"\"","module.exports = \"\\n\\n<!-- Registration Form -->\\n<form [formGroup]=\\\"form\\\" (submit)=\\\"onResetSubmit()\\\">\\n\\n\\n\\n\\n\\n  <!-- Password Input -->\\n  <div class=\\\"form-group\\\" >\\n    <label for=\\\"password\\\">New Password</label>\\n    <div>\\n      <input type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Password\\\" formControlName=\\\"password\\\" />\\n      <!-- Validation -->\\n      <ul class=\\\"help-block\\\">\\n        <li *ngIf=\\\"form.controls.password.errors?.required && form.controls.password.dirty\\\" class=\\\"text-danger\\\">This field is required</li>\\n        <li class=\\\"text-danger\\\" *ngIf=\\\"form.controls.password.errors?.minlength && form.controls.password.dirty || form.controls.password.errors?.maxlength && form.controls.password.dirty \\\">Minimum characters: 8, Maximum characters: 35</li>\\n   <li  class=\\\"text-danger\\\" *ngIf=\\\"form.controls.password.errors?.validatePassword && form.controls.password.dirty\\\">Password must be at least 8 characters but no more than 50</li>\\n      </ul>\\n    </div>\\n  </div>\\n\\n  <!-- Confirm Password Input -->\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"confirm\\\">Confirm Password</label>\\n    <div [ngClass]=\\\"{'has-error': (form.controls.confirm.errors && form.controls.confirm.dirty) || (form.errors?.matchingPasswords && form.controls.confirm.dirty), 'has-success': !form.controls.confirm.errors && !form.errors?.matchingPasswords}\\\">\\n      <input type=\\\"password\\\" name=\\\"confirm\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Confirm Password\\\"  formControlName=\\\"confirm\\\" />\\n      <!-- Validation -->\\n      <ul class=\\\"help-block\\\">\\n        <li *ngIf=\\\"form.controls.confirm.errors?.required && form.controls.confirm.dirty\\\">This field is required</li>\\n        <li *ngIf=\\\"form.errors?.matchingPasswords && form.controls.confirm.dirty\\\">Password do not match</li>\\n      </ul>\\n    </div>\\n  </div>\\n\\n\\n\\n  <!-- Submit Input -->\\n  <input   type=\\\"submit\\\" [disabled]=\\\"!processing\\\" class=\\\"btn btn-primary\\\" value=\\\"Submit\\\" />\\n\\n</form>\\n<!-- Registration Form /-->\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Router, ActivatedRoute} from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {AuthService} from '../../services/auth.service';\nimport * as alertify from 'alertify.js';\ndeclare var $:any\n\n@Component({\n  selector: 'app-reset',\n  templateUrl: './reset.component.html',\n  styleUrls: ['./reset.component.css']\n})\nexport class ResetComponent implements OnInit {\n\n  processing;\n  form;\n  token:any;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private route: ActivatedRoute,\n    private router :Router\n  ) {\n    this.createForm();\n  }\n\n  ngOnInit() {\n\n    this.route.params.subscribe(\n      params => {\n        this.token = params.token;\n  });\n\n\n\n  }\n\n\n   // Function to create registration form\n   createForm() {\n    this.form = this.formBuilder.group({\n      // Password Input\n      password: ['', Validators.compose([\n        Validators.required, // Field is required\n        Validators.minLength(8), // Minimum length is 8 characters\n      Validators.maxLength(50), // Maximum length is 35 characters\n      ])],\n      // Confirm Password Input\n      confirm: ['', Validators.required] // Field is required\n    }, { validator: this.matchingPasswords('password', 'confirm') }); // Add custom validator to form for matching passwords\n  }\n\n\n   // Funciton to ensure passwords match\n   matchingPasswords(password, confirm) {\n    return (group: FormGroup) => {\n      // Check if both fields are the same\n      if (group.controls[password].value != '' && group.controls[confirm].value != '')\n      if (group.controls[password].value === group.controls[confirm].value) {\n       this.processing = !false;\n        return null; // Return as a match\n\n      } else {\n\n        return { 'matchingPasswords': true } // Return as error: do not match\n      }\n    }\n  }\n\n  onResetSubmit(){\n\n    this.authService.resetPassword(this.token, this.form.value.password ).subscribe(res => {\n\n\n      if(res['success'] === true){\n\n        alertify.logPosition('top right').success(\"Password has been updated sucessfully\");//example\n        this.router.navigate(['/login']);\n      }else{\n        alertify.logPosition('top right').error(\"Invalid Token or expired please try again \");//example\n        this.router.navigate(['/forget']);\n      }\n\n    });\n\n\n  }\n\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-12\\\">\\n      <div class=\\\"row background-white\\\">\\n          <div class=\\\"col-1\\\">\\n              <img class=\\\"img-cons\\\" src=\\\"../../../assets/img/storm.png\\\">\\n          </div>\\n          <div class=\\\"col-5 mT-10\\\">\\n              <h2 class=\\\"cons-h\\\">STORM MIX</h2>\\n              <h4 class=\\\"cons-h4\\\">Wind/Wasser/Solar </h4>\\n          </div>\\n          <div class=\\\"col-6 text-right\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-end-contract btn-energy\\\"\\n                      data-toggle=\\\"modal\\\" data-target=\\\"#sell-energy\\\">Add\\n                  Energy\\n              </button>\\n          </div>\\n\\n          <div class=\\\"col-12 mT-50\\\">\\n              <div class=\\\"row mT-10 nine-cols\\\">\\n                  <div class=\\\"col text-center border-charts\\\" *ngIf=\\\"windPowoer_engergyResource\\\">\\n                      <div class=\\\"c100 p65 blue\\\">\\n                          <span>{{windPower_totalPercentage.toFixed(2)}}%</span>\\n                          <div class=\\\"slice\\\">\\n                              <div class=\\\"bar\\\"></div>\\n                              <div class=\\\"fill\\\"></div>\\n                          </div>\\n                      </div>\\n                      <div>\\n                          <img class=\\\"img-chart\\\" src=\\\"../../../assets/img/wind.png\\\">\\n                          <p class=\\\"wind-text m-b-10-negv\\\">{{windPowoer_engergyResource}}</p>\\n                          <p class=\\\"wind-text\\\">{{windPower_production}} KWH</p>\\n\\n                      </div>\\n                  </div>\\n\\n                  <div class=\\\"col text-center border-charts\\\">\\n                      <div class=\\\"c100 p45 blue\\\">\\n                          <span>45%</span>\\n                          <div class=\\\"slice\\\">\\n                              <div class=\\\"bar\\\"></div>\\n                              <div class=\\\"fill\\\"></div>\\n                          </div>\\n                      </div>\\n                      <div>\\n                          <img class=\\\"img-chart\\\" src=\\\"../../../assets/img/solar.png\\\">\\n                          <p class=\\\"wind-text m-b-10-negv\\\">Solar</p>\\n                          <p class=\\\"wind-text\\\">10 KWH</p>\\n\\n                      </div>\\n                  </div>\\n\\n                  <div class=\\\"col text-center border-charts\\\">\\n                      <div class=\\\"c100 p35 blue\\\">\\n                          <span>35%</span>\\n                          <div class=\\\"slice\\\">\\n                              <div class=\\\"bar\\\"></div>\\n                              <div class=\\\"fill\\\"></div>\\n                          </div>\\n                      </div>\\n                      <div>\\n                          <img class=\\\"img-chart\\\" src=\\\"../../../assets/img/nuclear.png\\\">\\n                          <p class=\\\"wind-text m-b-10-negv\\\">Nuclear</p>\\n                          <p class=\\\"wind-text\\\">10 KWH</p>\\n\\n                      </div>\\n                  </div>\\n\\n                  <div class=\\\"col text-center border-charts\\\">\\n                      <div class=\\\"c100 p25 blue\\\">\\n                          <span>25%</span>\\n                          <div class=\\\"slice\\\">\\n                              <div class=\\\"bar\\\"></div>\\n                              <div class=\\\"fill\\\"></div>\\n                          </div>\\n                      </div>\\n                      <div>\\n                          <img class=\\\"img-chart\\\" src=\\\"../../../assets/img/wasser.png\\\">\\n                          <p class=\\\"wind-text m-b-10-negv\\\">Wasser</p>\\n                          <p class=\\\"wind-text\\\">10 KWH</p>\\n\\n                      </div>\\n                  </div>\\n\\n                  <div class=\\\"col text-center border-charts\\\">\\n                      <div class=\\\"c100 p75 blue\\\">\\n                          <span>75%</span>\\n                          <div class=\\\"slice\\\">\\n                              <div class=\\\"bar\\\"></div>\\n                              <div class=\\\"fill\\\"></div>\\n                          </div>\\n                      </div>\\n                      <div>\\n                          <img class=\\\"img-chart\\\" src=\\\"../../../assets/img/geopower.png\\\">\\n                          <p class=\\\"wind-text m-b-10-negv\\\">Geopower</p>\\n                          <p class=\\\"wind-text\\\">10 KWH</p>\\n                      </div>\\n                  </div>\\n\\n\\n              </div>\\n              <div class=\\\"row mT-20 nine-cols\\\">\\n                  <div class=\\\"col text-center border-charts\\\">\\n                      <div class=\\\"c100 p85 blue\\\">\\n                          <span>85%</span>\\n                          <div class=\\\"slice\\\">\\n                              <div class=\\\"bar\\\"></div>\\n                              <div class=\\\"fill\\\"></div>\\n                          </div>\\n                      </div>\\n                      <div>\\n                          <img class=\\\"img-chart\\\" src=\\\"../../../assets/img/diesal.png\\\">\\n                          <p class=\\\"wind-text m-b-10-negv\\\">Diesel</p>\\n                          <p class=\\\"wind-text\\\">10 KWH</p>\\n                      </div>\\n                  </div>\\n\\n                  <div class=\\\"col text-center border-charts\\\">\\n                      <div class=\\\"c100 p95 blue\\\">\\n                          <span>95%</span>\\n                          <div class=\\\"slice\\\">\\n                              <div class=\\\"bar\\\"></div>\\n                              <div class=\\\"fill\\\"></div>\\n                          </div>\\n                      </div>\\n                      <div>\\n                          <img class=\\\"img-chart\\\" src=\\\"../../../assets/img/bio.png\\\">\\n                          <p class=\\\"wind-text m-b-10-negv\\\">Bio</p>\\n                          <p class=\\\"wind-text\\\">10 KWH</p>\\n\\n                      </div>\\n                  </div>\\n\\n                  <div class=\\\"col text-center border-charts\\\">\\n                      <div class=\\\"c100 p5 blue\\\">\\n                          <span>5%</span>\\n                          <div class=\\\"slice\\\">\\n                              <div class=\\\"bar\\\"></div>\\n                              <div class=\\\"fill\\\"></div>\\n                          </div>\\n                      </div>\\n                      <div>\\n                          <img class=\\\"img-chart\\\" src=\\\"../../../assets/img/coal.png\\\">\\n                          <p class=\\\"wind-text m-b-10-negv\\\">Coal</p>\\n                          <p class=\\\"wind-text\\\">10 KWH</p>\\n\\n                      </div>\\n                  </div>\\n\\n                  <div class=\\\"col text-center border-charts\\\">\\n                      <div class=\\\"c100 p15 blue\\\">\\n                          <span>15%</span>\\n                          <div class=\\\"slice\\\">\\n                              <div class=\\\"bar\\\"></div>\\n                              <div class=\\\"fill\\\"></div>\\n                          </div>\\n                      </div>\\n                      <div>\\n                          <img class=\\\"img-chart\\\" src=\\\"../../../assets/img/gas.png\\\">\\n                          <p class=\\\"wind-text m-b-10-negv\\\">Gas</p>\\n                          <p class=\\\"wind-text\\\">10 KWH</p>\\n\\n                      </div>\\n                  </div>\\n\\n                  <div class=\\\"col\\\">\\n                  </div>\\n              </div>\\n          </div>\\n\\n\\n      </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {DataService} from '../../services/data.service';\n\n@Component({\n  selector: 'app-user-energy-mix',\n  templateUrl: './user-energy-mix.component.html',\n  styleUrls: ['./user-energy-mix.component.css']\n})\nexport class UserEnergyMixComponent implements OnInit {\n\n  engergyResources = ['WIND_POWER' ,'SOLAR_POWER','NUCLEAR','GEO_POWER','BIO','GAS', 'COAL','DIESEL'];\n  windPower_totalPercentage :any = 0;\n  windPowoer_engergyResource:any;\n  windPower_totalunitsPurchased:any;\n  \n  solarPower_totalPercentage :any = 0;\n  solarPowoer_engergyResource:any;\n  solarPower_production:any;\n\n  nuclear_totalPercentage :any = 0;\n  nuclear_engergyResource:any;\n  nuclear_production:any;\n\n  geoPower_totalPercentage :any = 0;\n  geoPower_engergyResource:any;\n  geoPower_production:any;\n\n  bioPower_totalPercentage :any = 0;\n  bioPowoer_engergyResource:any;\n  bioPower_production:any;\n\n  gasPower_totalPercentage :any = 0;\n  gasPowoer_engergyResource:any;\n  gasPower_production:any;\n\n\n  coalPower_totalPercentage :any = 0;\n  coalPowoer_engergyResource:any;\n  coalPower_production:any;\n\n\n  dieselPower_totalPercentage :any = 0;\n  dieselPowoer_engergyResource:any;\n  dieselPower_production:any;\n\n\n  constructor(\n    private dataService:DataService\n  ) { }\n\n  ngOnInit() {\n\n    this.dataService.getMix().subscribe(res =>{\n\n      \n      console.log('Repsonse from mix is ',res['energyConsumption']);\n        res['energyConsumption'].forEach(element => {\n        console.log('Element is', element.unitsPurchased);\n        console.log('Element Response',element.energyResource === \"WIND_POWER\")\n        if(element.energyResource == 'WIND_POWER'){\n          this.windPowoer_engergyResource = 'WIND POWER';\n          this.windPower_totalunitsPurchased += element.unitsPurchased;\n          this.windPower_totalPercentage += element.percentage;\n              \n        }\n        if(element.energyResource == 'SOLAR_POWER'){\n          this.solarPowoer_engergyResource = 'SOLAR POWER';\n          this.solarPower_production += element.unitsPurchased;\n          this.solarPower_totalPercentage += element.percentage;\n          \n        }\n\n        if(element.energyResource === 'NUCLEAR'){\n          this.nuclear_engergyResource = 'NUCLEAR';\n          this.nuclear_production += element.unitsPurchased;\n          this.nuclear_totalPercentage += element.percentage;\n          \n        }\n\n        if(element.energyResource == 'GEO_POWER'){\n          this.geoPower_engergyResource = 'GEO POWER';\n          this.geoPower_production = element.production;\n          this.geoPower_totalPercentage += element.percentage;\n          \n        }\n\n        if(element.energyResource == 'BIO'){\n          this.bioPowoer_engergyResource = 'BIO';\n          this.bioPower_production = element.production;\n          this.bioPower_totalPercentage += element.percentage;\n          \n        }\n\n        if(element.energyResource == 'COAL'){\n          this.coalPowoer_engergyResource = 'COAL';\n          this.coalPower_production = element.production;\n          this.coalPower_totalPercentage += element.percentage;\n          \n        }\n\n        if(element.energyResource == 'DIESEL'){\n          this.dieselPowoer_engergyResource = 'DIESEL';\n          this.dieselPower_production = element.production;\n          this.dieselPower_totalPercentage += element.percentage;\n          \n        }\n\n\n      console.log('Wind power units purchased',this.windPower_totalunitsPurchased);\n\n        \n        \n      }); \n\n     \n\n\n\n    \n     // this.energies = this.arrayMap(res, item => item.energyConsumed);       \n     //this.timestamps = this.arrayMap(res, item => item.timestamp.split(\"T\")[0])\n      // console.log('Response for mix about energyResource', res['energyConsumption'][0]['energyResource']);\n      // console.log('Response for mix about percentage', res['energyConsumption'][0]['percentage']);\n      // console.log('Response for mix about production', res['energyConsumption'][0]['production']);\n \n });\n  }\n\n  arrayMap(obj, fn){   \n    var aray = [];  \n    for(var i = 0; i < obj.length; i++)\n    {     \n           aray.push(fn(obj[i])); \n   }     \n             return aray; \n    }\n\n}\n","module.exports = \".modal.fade.show.in{\\r\\n    background: rgba(0,0,0,0.5);\\r\\n}\"","module.exports = \"<!-- Modal -->\\n<div id=\\\"myModal\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\">\\n  <div class=\\\"modal-dialog\\\">\\n\\n    <!-- Modal content-->\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n          <h4 class=\\\"modal-title\\\">Verify User {{user.username}}</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n        \\n      </div>\\n      <div class=\\\"modal-body\\\">\\n\\n        <!-- Registration Form -->\\n        <form>\\n\\n          <!-- Username Input -->\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"username\\\">Username</label>\\n            <div>\\n              <p >{{user.username}}</p>\\n            </div>\\n          </div>\\n\\n          <!-- Email Input -->\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"email\\\">Email</label>\\n             <p>{{user.email}}</p>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"distanceFromGrid\\\">Distance from grid</label>\\n            <p>{{user.distanceFromGrid}}</p>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"balanceAmount\\\">Balance</label>\\n           <p>{{user.balanceAmount}}</p>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"PricePerKWH\\\">Price Per KWH</label>\\n           <p>{{user.PricePerKWH}}</p>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"LocationDetail\\\">Location</label>\\n            <div>\\n            <p>{{user.LocationDetail}}</p>\\n         </div>\\n          </div>\\n\\n\\n          <!-- Submit Input -->\\n          <input  *ngIf=\\\"!activate\\\"  type=\\\"submit\\\" class=\\\"btn btn-primary tex-center form-control\\\" (click)=\\\"activateUser()\\\" value=\\\"Activate User\\\" />\\n\\n        </form>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\\n\"","import { Component, OnInit ,Input} from '@angular/core';\nimport {ValidateService} from '../../services/validate.service';\nimport {AuthService} from '../../services/auth.service';\nimport {DataService} from '../../services/data.service';\nimport {Router} from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Ng4LoadingSpinnerService } from 'ng4-loading-spinner';\nimport * as alertify from 'alertify.js';\ndeclare var $:any;\n\n@Component({\n  selector: 'app-user-model',\n  templateUrl: './user-model.component.html',\n  styleUrls: ['./user-model.component.css']\n})\nexport class UserModelComponent implements OnInit {\n\n  \n  processing:boolean = false;\n  user:any = {};\n  username:string;\n  activate:boolean;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private dataService: DataService,\n    private router: Router,\n    private spinnerService: Ng4LoadingSpinnerService\n  ) {\n\n  }\n\n  ngOnInit() {\n\n  }\n\n  openModal(id:any){\n    \n    this.spinnerService.show();\n  \n    this.authService.getUserById(id).subscribe(res =>{\n      \n      if(res['success'] === true){\n        console.log('Response from data is ' , res['message']);\n        this.user = res['message'];\n        this.activate = this.user.activate;\n        this.spinnerService.hide();\n        console.log('Open model inside user model',id);\n        // this.showAngularModal($(\"#myModal\"));\n        $(\"#myModal\").showAngularModal();\n        // $(\"#myModal\").showAngularModal();\n        // $(\"body\").addClass(\"modal-open\");\n        // $(\"#myModal\").addClass(\"show in\");\n       // $('#myModal').modal('show');\n      }\n    });\n  }\n\n  activateUser(){\n    console.log('Hello World', this.user._id);\n    this.spinnerService.show();\n    this.authService.getUserById(this.user._id).subscribe(res =>{\n      console.log('Response from data is ' , res['message']);\n      if(res['success'] === true){\n\n       let newUser = {\n        \"userID\":this.user._id,\n        \"name\":this.user.username,\n        \"distanceFromGrid\":this.user.distanceFromGrid,\n        \"pricePerKWH\":this.user.PricePerKWH,\n        \"balanceAmount\":this.user.balanceAmount,\n        \"location\":this.user.LocationDetail\n       };\n       console.log('New user detail is ', newUser);\n        \n        this.dataService.createUser(newUser).subscribe(res =>{\n          console.log(res);\n\n          this.authService.activateUser(this.user._id).subscribe(res =>{\n            console.log('Response for activate user',res);\n            if(res['success'] === true){\n              alertify.logPosition('top right').success(\"User account has been activated sucessfully\");//example\n              this.spinnerService.hide();\n              $('#myModal').modal('hide');\n            }else{\n\n              alertify.logPosition('top right').error(\"Somthing went wrong please try again\");//example\n              this.spinnerService.hide();\n            }\n           \n          })\n\n         \n        });\n\n      }\n    });\n  }\n\n\n\n}\n","module.exports = \"\"","module.exports = \"<div>\\n  <div class=\\\"sidebar\\\">\\n      <div class=\\\"sidebar-inner\\\">\\n          <div class=\\\"sidebar-logo\\\">\\n              <div class=\\\"peers ai-c fxw-nw\\\">\\n                  <div class=\\\"peer peer-greed\\\">\\n                      <a class=\\\"sidebar-link td-n\\\" href=\\\"/index.html\\\">\\n                          <div class=\\\"peers ai-c fxw-nw\\\">\\n                              <div class=\\\"peer\\\">\\n                                  <div>\\n                                      <img class=\\\"rengoo-logo\\\" src=\\\"../../../assets/img/logo.png\\\" alt=\\\"Rengoo\\\">\\n                                  </div>\\n                              </div>\\n\\n                          </div>\\n                      </a>\\n                  </div>\\n                  <div class=\\\"peer\\\">\\n                      <div class=\\\"mobile-toggle sidebar-toggle\\\">\\n                          <a class=\\\"td-n\\\">\\n                              <i class=\\\"ti-arrow-circle-left\\\"></i>\\n                          </a>\\n                      </div>\\n                  </div>\\n              </div>\\n          </div>\\n          <ul class=\\\"sidebar-menu scrollable pos-r\\\">\\n              <li class=\\\"nav-item mT-30 active\\\">\\n                  <a class=\\\"sidebar-link\\\" [routerLink]=\\\"['/userPanel']\\\" default>\\n                          <span class=\\\"icon-holder\\\">\\n                              <i class=\\\"c-blue-500 ti-home\\\"></i>\\n                          </span>\\n                      <span class=\\\"title\\\" >Dashboard</span>\\n                  </a>\\n              </li>\\n\\n              \\n             \\n          </ul>\\n      </div>\\n  </div>\\n  <div class=\\\"page-container\\\">\\n      <div class=\\\"header navbar\\\">\\n          <div class=\\\"header-container\\\">\\n              <ul class=\\\"nav-left\\\">\\n                  <li>\\n                      <a id=\\\"sidebar-toggle\\\" class=\\\"sidebar-toggle\\\" href=\\\"javascript:void(0);\\\">\\n                          <i class=\\\"ti-menu\\\"></i>\\n                      </a>\\n                  </li>\\n                  <li class=\\\"search-box\\\">\\n                      <div class=\\\"nav-wrapper\\\">\\n                          <div class=\\\"sl-nav\\\">\\n                              <ul>\\n                                  <li><b>English</b> <i class=\\\"fa fa-angle-down\\\" aria-hidden=\\\"true\\\"></i>\\n                                      <div class=\\\"triangle\\\"></div>\\n                                      <ul>\\n                                          <li><i class=\\\"sl-flag flag-de\\\">\\n                                              <div id=\\\"germany\\\"></div>\\n                                          </i> <span class=\\\"active\\\">Deutsch</span></li>\\n                                          <li><i class=\\\"sl-flag flag-usa\\\">\\n                                              <div id=\\\"germany\\\"></div>\\n                                          </i> <span>English</span></li>\\n                                      </ul>\\n                                  </li>\\n                              </ul>\\n                          </div>\\n                      </div>\\n                  </li>\\n                  <li class=\\\"search-input\\\">\\n                      <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Search...\\\">\\n                  </li>\\n              </ul>\\n              <ul class=\\\"nav-right\\\">\\n                  \\n                  <li class=\\\"dropdown\\\">\\n                      <a class=\\\"dropdown-toggle no-after peers fxw-nw ai-c lh-1\\\" data-toggle=\\\"dropdown\\\">\\n                          <div class=\\\"peer mR-10\\\">\\n                              <img class=\\\"w-2r bdrs-50p\\\" src=\\\"../../../assets/img/default.png\\\" alt=\\\"\\\">\\n                          </div>\\n                          <div class=\\\"peer\\\">\\n                              <span class=\\\"fsz-sm c-grey-900\\\">{{user}}</span>\\n                          </div>\\n                      </a>\\n                      <ul class=\\\"dropdown-menu fsz-sm\\\">\\n                          <li role=\\\"separator\\\" class=\\\"divider\\\"></li>\\n                          <li *ngIf=\\\"authService.loggedIn()\\\">\\n                              <a class=\\\"d-b td-n pY-5 bgcH-grey-100 c-grey-700\\\"\\n                              (click)=\\\"onLogoutClick()\\\"\\n                              >\\n                                  <i class=\\\"ti-power-off mR-10\\\"></i>\\n                                  <span>Logout</span>\\n                              </a>\\n                          </li>\\n                      </ul>\\n                  </li>\\n              </ul>\\n          </div>\\n      </div>\\n      <main class=\\\"main-content bgc-grey-100\\\">\\n          <div id=\\\"mainContent\\\">\\n              <div class=\\\"row gap-20 masonry pos-r height-100\\\">\\n                  <div class=\\\"col-md-12 \\\">\\n                      <div class=\\\"row height-100\\\">\\n                          <div class=\\\"col-md-2 background-fff\\\">\\n                              <form>\\n                                  <div class=\\\"form-group mB-0\\\">\\n                                      <input class=\\\"search-input\\\" type=\\\"search\\\" placeholder=\\\"Search...\\\">\\n                                  </div>\\n                              </form>\\n\\n\\n                              <div class=\\\"nav nav-tabs nav-fill\\\" id=\\\"nav-tab\\\" role=\\\"tablist\\\">\\n                                  <a class=\\\"nav-item nav-link active border-left-1\\\" id=\\\"nav-home-tab\\\"\\n                                     data-toggle=\\\"tab\\\" href=\\\"#nav-current\\\" role=\\\"tab\\\" aria-controls=\\\"nav-home\\\"\\n                                     aria-selected=\\\"true\\\">Current Consumption\\n                                      <span class=\\\"d-block\\\">5 KW/H</span>\\n                                  </a>\\n                                  <a class=\\\"nav-item nav-link border-left-2\\\" id=\\\"nav-profile-tab\\\" data-toggle=\\\"tab\\\"\\n                                     href=\\\"#nav-mix\\\" role=\\\"tab\\\" aria-controls=\\\"nav-profile\\\" aria-selected=\\\"false\\\">\\n                                      MIX\\n                                      <span class=\\\"d-block\\\"> Wind 28%  water 66%  Solar 6%</span>\\n                                  </a>\\n                                  <a class=\\\"nav-item nav-link border-left-3\\\" id=\\\"nav-contact-tab\\\" data-toggle=\\\"tab\\\"\\n                                     href=\\\"#nav-power\\\" role=\\\"tab\\\" aria-controls=\\\"nav-contact\\\" aria-selected=\\\"false\\\">\\n                                      Power Storage\\n                                      <span class=\\\"d-block\\\">Haus: 55%   Auto: 90%</span>\\n                                  </a>\\n                                  <a class=\\\"nav-item nav-link border-left-4\\\" id=\\\"nav-about-tab\\\" data-toggle=\\\"tab\\\"\\n                                     href=\\\"#nav-tradet\\\" role=\\\"tab\\\" aria-controls=\\\"nav-about\\\" aria-selected=\\\"false\\\">\\n                                      Trade\\n\\n                                      <span class=\\\"d-block\\\">Sale from 20 Rp. / kWh</span>\\n                                  </a>\\n                              </div>\\n                          </div>\\n\\n                          <div class=\\\"col-md-10 padding-0\\\">\\n                              <div class=\\\"tab-content py-3 px-3 px-sm-0 padding-0\\\" id=\\\"nav-tabContent\\\">\\n                                  <div class=\\\"tab-pane fade show active\\\" id=\\\"nav-current\\\" role=\\\"tabpanel\\\"\\n                                       aria-labelledby=\\\"nav-home-tab\\\">\\n\\n\\n                                      <div class=\\\"h-1 color-h\\\"><span class=\\\"text-h\\\">Current Consumption</span></div>\\n\\n\\n                                      <div class=\\\"row\\\">\\n                                          <div class=\\\"col-12\\\">\\n                                              <div class=\\\"row background-white\\\">\\n                                                  <div class=\\\"col-1\\\">\\n                                                      <img class=\\\"img-cons\\\" src=\\\"../../../assets/img/consumption-logo.png\\\">\\n                                                  </div>\\n                                                  <div class=\\\"col-5 mT-10\\\">\\n                                                      <h2 class=\\\"cons-h\\\">Current Consumption</h2>\\n                                                      <h4 class=\\\"cons-h4\\\">Verbrauch <span\\n                                                              class=\\\"span-h4\\\"> 5 kW/h </span></h4>\\n                                                  </div>\\n                                                  <div class=\\\"col-6 text-right\\\">\\n                                                      <button type=\\\"button\\\" class=\\\"btn btn-end-contract btn-sell\\\"\\n                                                              data-toggle=\\\"modal\\\" data-target=\\\"#sell-energy\\\">Open To\\n                                                          Sell Others\\n                                                      </button>\\n                                                  </div>\\n\\n                                                  <div class=\\\"col-12 mT-20\\\">\\n                                                      <div id=\\\"consumption\\\" class=\\\"consumption-chart\\\"></div>\\n                                                  </div>\\n\\n\\n                                                  <div class=\\\"col-12 mT-50\\\">\\n                                                      <div class=\\\"table-responsive\\\">\\n                                                          <table class=\\\"table table-striped\\\">\\n                                                              <thead>\\n                                                              <tr>\\n                                                                  <th scope=\\\"col\\\">Name</th>\\n                                                                  <th scope=\\\"col\\\">Energy Consumed</th>\\n                                                                  <th scope=\\\"col\\\">TimeStamp</th>\\n                                                              </tr>\\n                                                              </thead>\\n                                                              <tbody>\\n                                                              <tr *ngFor=\\\"let energy of energies; let i=index\\\">\\n\\n                                                                  <td>{{user}}</td>\\n                                                                  <td>{{energy}} KWH</td>\\n                                                                  <td>{{timestamps[i]}}</td>\\n                                                              </tr>\\n                                                              </tbody>\\n                                                          </table>\\n                                                      </div>\\n                                                  </div>\\n\\n\\n                                              </div>\\n                                          </div>\\n                                      </div>\\n                                  </div>\\n                                  <div class=\\\"tab-pane fade\\\" id=\\\"nav-mix\\\" role=\\\"tabpanel\\\"\\n                                       aria-labelledby=\\\"nav-profile-tab\\\">\\n                                      <div class=\\\"h-1 color-h1\\\"><span class=\\\"text-h\\\">STORM MIX</span></div>\\n\\n\\n                                      <!--\\n                                          Energy Mix Component\\n                                      -->\\n                                    <app-user-energy-mix></app-user-energy-mix>\\n\\n                                  </div>\\n                                  <div class=\\\"tab-pane fade\\\" id=\\\"nav-power\\\" role=\\\"tabpanel\\\"\\n                                       aria-labelledby=\\\"nav-contact-tab\\\">\\n                                      <div class=\\\"h-1 color-h2\\\"><span class=\\\"text-h\\\">Power Storage</span></div>\\n<!-- Power Storge Component-->\\n\\n                                     <app-user-power-storage></app-user-power-storage>\\n                                  </div>\\n                                  <div class=\\\"tab-pane fade\\\" id=\\\"nav-tradet\\\" role=\\\"tabpanel\\\"\\n                                       aria-labelledby=\\\"nav-about-tab\\\">\\n                                      <div class=\\\"h-1 color-h3\\\"><span class=\\\"text-h\\\">Trade</span></div>\\n                                     \\n                                      <!-- Trade Component-->\\n                                      <app-user-trade></app-user-trade>\\n                                  </div>\\n                              </div>\\n                          </div>\\n                      </div>\\n\\n                  </div>\\n\\n\\n              </div>\\n          </div>\\n      </main>\\n      <footer class=\\\"bdT ta-c pT-20 lh-0 fsz-sm \\\">\\n          <p class=\\\"mB-0\\\">Copyrights &copy; 2018 Rengoo, All Rights Reserved</p>\\n      </footer>\\n  </div>\\n</div>\\n\"","import { Component, OnInit,ViewChild } from '@angular/core';\nimport {NavbarComponent} from '../navbar/navbar.component';\nimport {AuthService} from '../../services/auth.service';\nimport {DataService} from '../../services/data.service';\nimport {FlashMessagesService} from 'angular2-flash-messages';\nimport {Router} from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { Observable } from \"rxjs/Observable\";\nimport { Ng4LoadingSpinnerService } from 'ng4-loading-spinner';\n\ndeclare var $:any;\ndeclare var Highcharts:any;\n@Component({\n  selector: 'app-user-panel-navbar',\n  templateUrl: './user-panel-navbar.component.html',\n  styleUrls: ['./user-panel-navbar.component.css']\n})\nexport class UserPanelNavbarComponent implements OnInit {\n\n  @ViewChild(NavbarComponent ) navbar: NavbarComponent;\n  user:string;\n   energies:any;\n   timestamps:any;\n // consumptions[]:any;\n\n  constructor(\n              private authService:AuthService,\n              private dataService:DataService,\n              private router:Router,\n              private spinnerService: Ng4LoadingSpinnerService,\n              private flashMessage:FlashMessagesService) { }\n\n  ngOnInit() {\n\n    this.dataService.getConsumption().subscribe(res =>{\n        this.energies = this.arrayMap(res, item => item.energyConsumed);       \n     this.timestamps = this.arrayMap(res, item => item.timestamp.split(\"T\")[0])\n         console.log('Consumption Response', res); \n        console.log('Consumption Response', this.timestamps);\n        console.log('Consumption Response', this.energies);\n        this.renderHighchart();\n    \n    });\n\n    this.dataService.getMix().subscribe(res=>{\n    \n        // console.log('Repsonse from mix is ',res['energyProductionDetails'][0]);\n        // console.log('Response for mix about energyResource', res['energyProductionDetails'][0]['energyResource']);\n        // console.log('Response for mix about percentage', res['energyProductionDetails'][0]['percentage']);\n        // console.log('Response for mix about production', res['energyProductionDetails'][0]['production']);\n        \n    })\n\n\n    this.authService.getProfile().subscribe(profile => {\n      \n      this.user = profile['user']['username'];\n      console.log(this.user);\n      this.spinnerService.hide();\n    },\n     err => {\n       this.spinnerService.hide();\n       return false;\n     });\n  }\n\n  arrayMap(obj, fn){   \n         var aray = [];  \n         for(var i = 0; i < obj.length; i++)\n         {     \n                aray.push(fn(obj[i])); \n        }     \n                  return aray; \n         }\n\n\n  onLogoutClick(){\n    this.authService.logout();\n    this.flashMessage.show('You are logged out', {\n      cssClass:'alert-success',\n      timeout: 3000\n    });\n    this.router.navigate(['/login']);\n    return false;\n  }\n\n  renderHighchart(){\n    Highcharts.chart('consumption', {\n        chart: {\n            type: 'areaspline'\n        },\n        title: {\n            text: 'Consumption Usage'\n        },\n        legend: {\n            layout: 'vertical',\n            align: 'left',\n            verticalAlign: 'top',\n            x: 150,\n            y: 100,\n            floating: true,\n            borderWidth: 1,\n            backgroundColor: (Highcharts.theme && Highcharts.theme.legendBackgroundColor) || '#FFFFFF'\n        },\n        xAxis: {\n            categories: this.timestamps,\n            plotBands: [{ // visualize the weekend\n                from: 4.5,\n                to: 6.5,\n                color: 'rgba(68, 170, 213, .2)'\n            }]\n        },\n        yAxis: {\n            title: {\n                text: 'Units'\n            }\n        },\n        tooltip: {\n            shared: true,\n            valueSuffix: ' units'\n        },\n        credits: {\n            enabled: false\n        },\n        plotOptions: {\n            areaspline: {\n                fillOpacity: 0.5\n            }\n        },\n        series: [{\n            name: 'Energy Consumed',\n            data: this.energies\n        }]\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-12\\\">\\n      <div class=\\\"row background-white\\\">\\n          <div class=\\\"col-1\\\">\\n              <img class=\\\"img-cons\\\" src=\\\"../../../assets/img/power-storage.png\\\">\\n          </div>\\n          <div class=\\\"col-11\\\">\\n              <h2 class=\\\"cons-h\\\">Power Storage</h2>\\n              <h4 class=\\\"cons-h4\\\">Haus/Auto<span class=\\\"span-h4\\\"> </span></h4>\\n              <p class=\\\"cons-p\\\">Lorem Ipsum is simply dummy text of the\\n                  printing and typesetting industry. Lorem Ipsum has been the\\n                  industry's standard dummy text ever since the 1500s, when an\\n                  unknown printer took a galley of type and scrambled it to\\n                  make a type specimen book. It has survived not only five\\n                  centuries.</p>\\n          </div>\\n\\n          <div class=\\\"col-12 mT-50\\\">\\n              <div class=\\\"table-responsive\\\">\\n                  <table class=\\\"table table-striped\\\">\\n                      <thead>\\n                      <tr>\\n                          <th scope=\\\"col\\\">User</th>\\n                          <th scope=\\\"col\\\">Units</th>\\n                          <th scope=\\\"col\\\">Price</th>\\n                          <th scope=\\\"col\\\">Action</th>\\n                      </tr>\\n                      </thead>\\n                      <tbody>\\n                      <tr>\\n\\n                          <td>Mark</td>\\n                          <td>Otto</td>\\n                          <td>@mdo</td>\\n                          <td>\\n                              <button type=\\\"button\\\"\\n                                      class=\\\"btn btn-danger btn-end-contract\\\"\\n                                      data-toggle=\\\"modal\\\"\\n                                      data-target=\\\"#modalpower\\\">End Contract\\n                              </button>\\n                          </td>\\n                      </tr>\\n                      <tr>\\n\\n                          <td>Jacob</td>\\n                          <td>Thornton</td>\\n                          <td>@fat</td>\\n                          <td>\\n                              <button type=\\\"button\\\"\\n                                      class=\\\"btn btn-danger btn-end-contract\\\"\\n                                      data-toggle=\\\"modal\\\"\\n                                      data-target=\\\"#modalpower\\\">End Contract\\n                              </button>\\n                          </td>\\n                      </tr>\\n                      <tr>\\n\\n                          <td>Larry</td>\\n                          <td>the Bird</td>\\n                          <td>@twitter</td>\\n                          <td>\\n                              <button type=\\\"button\\\"\\n                                      class=\\\"btn btn-danger btn-end-contract\\\"\\n                                      data-toggle=\\\"modal\\\"\\n                                      data-target=\\\"#modalpower\\\">End Contract</button>\\n                          </td>\\n                      </tr>\\n                      </tbody>\\n                  </table>\\n              </div>\\n          </div>\\n      </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user-power-storage',\n  templateUrl: './user-power-storage.component.html',\n  styleUrls: ['./user-power-storage.component.css']\n})\nexport class UserPowerStorageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-12\\\">\\n      <div class=\\\"row background-white\\\">\\n          <div class=\\\"col-1\\\">\\n              <img class=\\\"img-cons border-radius-100\\\" src=\\\"../../../assets/img/default.png\\\">\\n          </div>\\n          <div class=\\\"col-11\\\">\\n              <h2 class=\\\"cons-h mT-20\\\">John Doe :<span\\n                      class=\\\"cons-h\\\"> Seller</span></h2>\\n\\n          </div>\\n\\n          <div class=\\\"col-12 mT-50\\\">\\n              <div class=\\\"table-responsive\\\">\\n                  <table class=\\\"table table-striped\\\">\\n                      <thead>\\n                      <tr>\\n                          <th scope=\\\"col\\\">User</th>\\n                          <th scope=\\\"col\\\">Units</th>\\n                          <th scope=\\\"col\\\">Price</th>\\n                          <th scope=\\\"col\\\">Action</th>\\n                      </tr>\\n                      </thead>\\n                      <tbody>\\n                      <tr>\\n\\n                          <td>Mark</td>\\n                          <td>Otto</td>\\n                          <td>@mdo</td>\\n                          <td>\\n                              <button type=\\\"button\\\"\\n                                      class=\\\"btn btn-danger btn-end-contract\\\"\\n                                      data-toggle=\\\"modal\\\"\\n                                      data-target=\\\"#sell-energy\\\">Sell Energy\\n                              </button>\\n                          </td>\\n                      </tr>\\n                      <tr>\\n\\n                          <td>Jacob</td>\\n                          <td>Thornton</td>\\n                          <td>@fat</td>\\n                          <td>\\n                              <button type=\\\"button\\\"\\n                                      class=\\\"btn btn-danger btn-end-contract\\\"\\n                                      data-toggle=\\\"modal\\\"\\n                                      data-target=\\\"#sell-energy\\\">Sell Energy\\n                              </button>\\n                          </td>\\n                      </tr>\\n                      <tr>\\n\\n                          <td>Larry</td>\\n                          <td>the Bird</td>\\n                          <td>@twitter</td>\\n                          <td>\\n                              <button type=\\\"button\\\"\\n                                      class=\\\"btn btn-danger btn-end-contract\\\"\\n                                      data-toggle=\\\"modal\\\"\\n                                      data-target=\\\"#sell-energy\\\">Sell Energy\\n                              </button>\\n                          </td>\\n                      </tr>\\n                      </tbody>\\n                  </table>\\n              </div>\\n          </div>\\n      </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user-trade',\n  templateUrl: './user-trade.component.html',\n  styleUrls: ['./user-trade.component.css']\n})\nexport class UserTradeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\r\\n\\r\\n\\r\\n<app-user-panel-navbar></app-user-panel-navbar>\\r\\n\\r\\n<!-- Power Management Modal -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"modalpower\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">End Contract</h5>\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <form class=\\\"pT-50\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control sign-in-input\\\" placeholder=\\\"User\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control sign-in-input\\\" placeholder=\\\"Amount\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <select class=\\\"form-control sign-in-input\\\" id=\\\"sel1\\\">\\r\\n                            <option value=\\\"\\\" disabled selected>Connection Type</option>\\r\\n                            <option>Network User</option>\\r\\n                            <option>App User</option>\\r\\n                        </select>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group pY-20 text-center\\\">\\r\\n                        <a href=\\\"#\\\">\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-sign-in btn-red-border\\\">END CONTRACT</button>\\r\\n                        </a>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<!--Sell Energy Modal-->\\r\\n\\r\\n<div class=\\\"modal fade\\\" id=\\\"sell-energy\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h5 class=\\\"modal-title\\\">Sell Energy</h5>\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <div class=\\\"table-responsive\\\">\\r\\n                    <table class=\\\"table table-striped\\\">\\r\\n                        <thead>\\r\\n                        <tr>\\r\\n                            <th scope=\\\"col\\\">Energy Type</th>\\r\\n                            <th scope=\\\"col\\\">Total Available</th>\\r\\n                            <th scope=\\\"col\\\">Sell Energy Value</th>\\r\\n                        </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                        <tr>\\r\\n\\r\\n                            <td>Coal</td>\\r\\n                            <td>100 KW</td>\\r\\n                            <td>\\r\\n                                <form>\\r\\n                                    <div class=\\\"form-group mB-0\\\">\\r\\n                                        <input class=\\\"form-control input-table \\\" type=\\\"text\\\" placeholder=\\\"1 MW\\\">\\r\\n                                    </div>\\r\\n                                </form>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n\\r\\n                            <td>Turbine</td>\\r\\n                            <td>100 KW</td>\\r\\n                            <td>\\r\\n                                <form>\\r\\n                                    <div class=\\\"form-group mB-0\\\">\\r\\n                                        <input class=\\\"form-control input-table \\\" type=\\\"text\\\" placeholder=\\\"1 MW\\\">\\r\\n                                    </div>\\r\\n                                </form>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n\\r\\n                            <td>DAM</td>\\r\\n                            <td>100 KW</td>\\r\\n                            <td>\\r\\n                                <form>\\r\\n                                    <div class=\\\"form-group mB-0\\\">\\r\\n                                        <input class=\\\"form-control input-table \\\" type=\\\"text\\\" placeholder=\\\"1 MW\\\">\\r\\n                                    </div>\\r\\n                                </form>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row padding-10\\\">\\r\\n                    <div class=\\\"col-3\\\">\\r\\n\\r\\n                        <b>Total</b>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-9 text-right padding-r-25per\\\">\\r\\n\\r\\n                        <b>250</b>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"col-12 text-right padding-10 padding-r-15per\\\">\\r\\n                        <a href=\\\"#\\\">\\r\\n                            <button class=\\\"btn btn-end-contract btn-sell-energy\\\">Sell Energy</button>\\r\\n                        </a>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n\\r\\n\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!--End Sell Energy Modal-->\\r\\n\\r\\n\\r\\n<!--Sell Energy Modal-->\\r\\n\\r\\n<div class=\\\"modal fade\\\" id=\\\"sell-energy\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h5 class=\\\"modal-title\\\">Sell Energy</h5>\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <div class=\\\"table-responsive\\\">\\r\\n                    <table class=\\\"table table-striped\\\">\\r\\n                        <thead>\\r\\n                        <tr>\\r\\n                            <th scope=\\\"col\\\">Energy Type</th>\\r\\n                            <th scope=\\\"col\\\">Total Available</th>\\r\\n                            <th scope=\\\"col\\\">Sell Energy Value</th>\\r\\n                        </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                        <tr>\\r\\n\\r\\n                            <td>Coal</td>\\r\\n                            <td>100 KW</td>\\r\\n                            <td>\\r\\n                                <form>\\r\\n                                    <div class=\\\"form-group mB-0\\\">\\r\\n                                        <input class=\\\"form-control input-table \\\" type=\\\"text\\\" placeholder=\\\"1 MW\\\">\\r\\n                                    </div>\\r\\n                                </form>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n\\r\\n                            <td>Turbine</td>\\r\\n                            <td>100 KW</td>\\r\\n                            <td>\\r\\n                                <form>\\r\\n                                    <div class=\\\"form-group mB-0\\\">\\r\\n                                        <input class=\\\"form-control input-table \\\" type=\\\"text\\\" placeholder=\\\"1 MW\\\">\\r\\n                                    </div>\\r\\n                                </form>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n\\r\\n                            <td>DAM</td>\\r\\n                            <td>100 KW</td>\\r\\n                            <td>\\r\\n                                <form>\\r\\n                                    <div class=\\\"form-group mB-0\\\">\\r\\n                                        <input class=\\\"form-control input-table \\\" type=\\\"text\\\" placeholder=\\\"1 MW\\\">\\r\\n                                    </div>\\r\\n                                </form>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row padding-10\\\">\\r\\n                    <div class=\\\"col-3\\\">\\r\\n\\r\\n                        <b>Total</b>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-9 text-right padding-r-25per\\\">\\r\\n\\r\\n                        <b>250</b>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"col-12 text-right padding-10 padding-r-15per\\\">\\r\\n                        <a href=\\\"#\\\">\\r\\n                            <button class=\\\"btn btn-end-contract btn-sell-energy\\\">Sell Energy</button>\\r\\n                        </a>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n\\r\\n\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-userpanel',\n  templateUrl: './userpanel.component.html',\n  styleUrls: ['./userpanel.component.css']\n})\nexport class UserpanelComponent implements OnInit {\n\n  \n\n Rangoo:String = 'https://hyperledger-power-watson-rest-appreciative-bear.eu-gb.mybluemix.net/';\n\n\n\n  constructor() {\n    console.log(this.Rangoo+'api/User');\n   }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  App works\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\nimport {Router, ActivatedRoute} from '@angular/router';\nimport * as alertify from 'alertify.js';\n\n@Component({\n  selector: 'app-verify',\n  templateUrl: './verify.component.html',\n  styleUrls: ['./verify.component.css']\n})\nexport class VerifyComponent implements OnInit {\n  public token: any;\n\n  constructor(\n    private authService: AuthService,\n    private route: ActivatedRoute,\n    private router :Router\n  ) { }\n\n  ngOnInit() {\n    \n    // this.token = this.route.snapshot.params;\n    // console.log(this.token);\n\n    this.route.params.subscribe(\n      params => {\n        this.token = params.token;\n         console.log('Parameters are ' , this.token );\n  });\n\n    \n    \n    this.authService.verifyUser(this.token).subscribe(res => {\n      console.log('Response issssssszzz ' , res);\n       alertify.logPosition('top right').success(res['message']);//example\n        this.router.navigate(['/login']);     \n    },\n     err => {\n      alertify.logPosition('top right').error(\"Invalid token\");//example\n      this.router.navigate(['/login']);\n       return false;\n      });\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class AdminGuard implements CanActivate {\r\n  constructor (private authService:AuthService, private router:Router){\r\n\r\n  }\r\n\r\n  canActivate() {\r\n\r\n    if(this.authService.AdminloggedIn()) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor (private authService:AuthService, private router:Router){\r\n\r\n  }\r\n\r\n  canActivate() {\r\n    if(this.authService.loggedIn()) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n}","import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Http, Headers } from '@angular/http';\nimport { HttpModule } from '@angular/http';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authToken: any;\n  user: any;\n  constructor(private http:HttpClient) { }\n\n\n  registerUser(user){\n    console.log('User inside register service',user);\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/users/register', user, {\n      headers:new HttpHeaders().append('Content-Type','application/json')\n  }).pipe(map(res =>res));\n  }\n\n\n  authenticateUser(user){\n\n    return this.http.post('http://localhost:3000/users/authenticate',  user, {\n      headers:new HttpHeaders().append('Content-Type','application/json')\n    }).pipe(map(res =>res));\n  }\n\n  // Forget Password Api Call\n\n  forgetPassword(email){\n    return this.http.post('http://localhost:3000/users/forgetPassword',{email: email}, {\n      headers:new HttpHeaders().append('Content-Type','application/json')\n    }).pipe(map(res =>res));\n  }\n\n  // Reset Password\n\n  resetPassword(token, password){\n    return this.http.post(\"http://localhost:3000/users/resetPassword/\"+token+\"/\"+password, {\n      headers:new HttpHeaders().append('Content-Type','application/json')\n    }).pipe(map(res =>res));\n  }\n\n\n  getProfile() {\n    this.loadToken();\n    const headers = new HttpHeaders({\n      'Content-Type':  'application/json',\n      'Authorization': this.authToken\n    });\n\n    return this.http.get('http://localhost:3000/users/profile', {headers:headers }).pipe(map(res=>res));\n  }\n\n  loadToken() {\n    const token = localStorage.getItem('id_token');\n    this.authToken = token;\n    console.log('Token is  ' + this.authToken);\n  }\n\n\n\n  loggedIn(){\n    \n    if (localStorage.getItem('id_token') == undefined ){\n\n     return false;\n    } else {\n  const helper = new JwtHelperService();\n    return !helper.isTokenExpired(localStorage.getItem('id_token')); // other people are putting 'id_token'' here but it didn't work for me so i just put the localStorage item\n    }\n   }\n\n\n   AdminloggedIn(){\n\n    var isAdmin = JSON.parse(localStorage.getItem(\"user\")).isAdmin;\n    if(isAdmin)\n      return true;\n    else{\n    \n      return false;\n    }\n\n\n   }\n\n\n  storeUserData(token, user){\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  logout(){\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n\n\n\n  // Function to check if username is taken\n checkUsername(username) {\n const headers = new HttpHeaders({\n   'Content-Type':  'application/json'\n });\n   return this.http.get('http://localhost:3000/users/checkUsername/' + username,{headers:headers })\n   .pipe(map(res=>res));\n }\n\n\n checkEmail(email) {\n   const headers = new HttpHeaders({\n     'Content-Type':  'application/json'\n   });\n\n   return this.http.get('http://localhost:3000/users/checkEmail/' + email, {headers:headers }).pipe(map(res=>res));\n }\n\n\n getUserById(_id) {\n  const headers = new HttpHeaders({\n    'Content-Type':  'application/json'\n  });\n\n  return this.http.get('http://localhost:3000/users/getUserById/' + _id, {headers:headers }).pipe(map(res=>res));\n}\n\nactivateUser(_id) {\n  const headers = new HttpHeaders({\n    'Content-Type':  'application/json'\n  });\n  return this.http.get('http://localhost:3000/users/activateUser/' + _id, {headers:headers }).pipe(map(res=>res));\n}\n\n // Function to get all users records\ngetAllUsers() {\nconst headers = new HttpHeaders({\n  'Content-Type':  'application/json'\n});\n  return this.http.get('http://localhost:3000/users/getAllUsers',{headers:headers })\n  .pipe(map(res=>res));\n}\n\nverifyUser(token){\n  const headers = new HttpHeaders({\n    'Content-Type':  'application/json'\n  });\n    return this.http.get('http://localhost:3000/users/verify/'+ token ,{headers:headers })\n    .pipe(map(res=>res));\n}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n RengooUrl:any = 'https://rengoo-latest-playground-balanced-leopard.eu-gb.mybluemix.net/api';\n MixUrl:any = 'https://rengoo-latest-rest-optimistic-pangolin.eu-gb.mybluemix.net/api/User/';\n ConsumptionUrl ='https://rengoo-latest-rest-optimistic-pangolin.eu-gb.mybluemix.net/api/queries/GetConsumptionForTable?user=resource%3Awaltson.poc.hyperledger.User%23';\n\n \n\n\n  constructor(private http: HttpClient) { \n   \n  }\n\n  getUsers(){\n\n  }\n\n  createUser(newUser){\n\n     console.log('I am in new User',newUser.userID);\n\n\n\n    return this.http.post(this.RengooUrl+'api/User',newUser, {\n      headers:new HttpHeaders().append('Content-Type','application/json')\n    }).pipe(map(res =>res));\n  }\n\n  \n\n  getConsumption(){\n      return this.http.get(this.ConsumptionUrl+2, {\n      headers:new HttpHeaders().append('Content-Type','application/json')\n    }).pipe(map(res =>res));\n  }\n\n\n  getMix(){\n    return this.http.get(this.MixUrl+3, {\n      headers:new HttpHeaders().append('Content-Type','application/json')\n    }).pipe(map(res =>res));\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user){\n    if(user.name == undefined || user.email == undefined || user.username == undefined || user.password == undefined){\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  validateEmail(email){\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}